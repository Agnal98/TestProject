package com.example.orcaadminservice.dto;

import java.util.Objects;

import javax.validation.constraints.NotBlank;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Getter
@Setter
@NoArgsConstructor
public class UserRoleDTO {

	@NotBlank
	@Pattern(regexp = "([A-Za-z0-9]+?_?)*", message="Only Alphanumeric Characters, underscore and space are allowed.")
	@Size(min = 3, max = 100, message = "Task name should be of minimum 3 and maximum 100 characters length.")
	private String user;
	
	@NotBlank
	@Pattern(regexp = "([A-Za-z0-9]+?_?)*", message="Only Alphanumeric Characters, underscore and space are allowed.")
	@Size(min = 3, max = 100, message = "Task name should be of minimum 3 and maximum 100 characters length.")
    private String roles;
	@Override
	public boolean equals(Object o) {
		if (this == o) return true;
		if (o == null || getClass() != o.getClass()) return false;
		UserRoleDTO userRoleDTO = (UserRoleDTO) o;
		return Objects.equals(user, userRoleDTO.user) && Objects.equals(roles, userRoleDTO.roles);
	}
	@Override
	public int hashCode() {
		return Objects.hash( user,roles);
	}

}
